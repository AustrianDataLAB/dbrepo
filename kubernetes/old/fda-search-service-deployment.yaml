apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../../docker-compose.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: fda-search-service
  name: fda-search-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: fda-search-service
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../../docker-compose.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/core: "true"
        io.kompose.service: fda-search-service
    spec:
      containers:
        - env:
            - name: BROKER_CONSUMERS
              valueFrom:
                configMapKeyRef:
                  key: BROKER_CONSUMERS
                  name: env
            - name: BROKER_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: BROKER_PASSWORD
                  name: env
            - name: BROKER_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: BROKER_USERNAME
                  name: env
            - name: DEFAULT_ROLES
              valueFrom:
                configMapKeyRef:
                  key: DEFAULT_ROLES
                  name: env
            - name: ELASTIC_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: ELASTIC_PASSWORD
                  name: env
            - name: JWT_EXPIRATION
              valueFrom:
                configMapKeyRef:
                  key: JWT_EXPIRATION
                  name: env
            - name: JWT_ISSUER
              valueFrom:
                configMapKeyRef:
                  key: JWT_ISSUER
                  name: env
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: JWT_SECRET
                  name: env
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: LOG_LEVEL
                  name: env
            - name: MAIL_FROM
              valueFrom:
                configMapKeyRef:
                  key: MAIL_FROM
                  name: env
            - name: MAIL_REPLY_TO
              valueFrom:
                configMapKeyRef:
                  key: MAIL_REPLY_TO
                  name: env
            - name: MAIL_VERIFY
              valueFrom:
                configMapKeyRef:
                  key: MAIL_VERIFY
                  name: env
            - name: METADATA_DB
              valueFrom:
                configMapKeyRef:
                  key: METADATA_DB
                  name: env
            - name: METADATA_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: METADATA_PASSWORD
                  name: env
            - name: METADATA_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: METADATA_USERNAME
                  name: env
            - name: SHARED_FILESYSTEM
              valueFrom:
                configMapKeyRef:
                  key: SHARED_FILESYSTEM
                  name: env
            - name: SMTP_HOST
              valueFrom:
                configMapKeyRef:
                  key: SMTP_HOST
                  name: env
            - name: SMTP_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: SMTP_PASSWORD
                  name: env
            - name: SMTP_PORT
              valueFrom:
                configMapKeyRef:
                  key: SMTP_PORT
                  name: env
            - name: SMTP_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: SMTP_USERNAME
                  name: env
            - name: SUPERUSERS
              valueFrom:
                configMapKeyRef:
                  key: SUPERUSERS
                  name: env
            - name: TOKEN_MAX
              valueFrom:
                configMapKeyRef:
                  key: TOKEN_MAX
                  name: env
            - name: WEBSITE
              valueFrom:
                configMapKeyRef:
                  key: WEBSITE
                  name: env
          image: fda-search-service
          name: dbrepo-search-service
          ports:
            - containerPort: 9200
            - containerPort: 9600
          resources: {}
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: search-service-data
      hostname: search-service
      restartPolicy: Always
      volumes:
        - name: search-service-data
          persistentVolumeClaim:
            claimName: search-service-data
status: {}
